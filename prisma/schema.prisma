// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Streak {
  id          Int         @id @default(autoincrement())
  title       String      // The title or name of the streak (e.g., "Pushups")
  streakType  StreakType  // The type of streak (e.g., simple or count)
  streakCount Int         // The number of days the streak has been completed
  count       Float       // The quantity or amount (e.g., 50 for 50 pushups, 1.5 for 1.5 gallons of water)
  average     Float       // The average amount per day (e.g., 50 pushups per day)
  datatype    DataType    // The type of the streak (e.g., reps, distance, weight, gallons)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  lastUpdated DateTime    @default(now())

}

enum StreakType {
  SIMPLE
  COUNT
}

enum DataType {
  REPS
  DISTANCE
  WEIGHT
  GALLONS
  SECONDS
  MINUTES
  HOURS
  MILES
  KILOMETERS
  LITERS
  NONE
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  content   String?
  published Boolean  @default(false)
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  lastUpdated DateTime    @default(now())
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  userId Int     @unique
  user   User    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model User {
  id      Int      @id @default(autoincrement())
  name    String?  @db.VarChar(255)
  email   String   @unique @db.VarChar(255)
  password String  @db.VarChar(255)
  posts   Post[]
  profile Profile?
}